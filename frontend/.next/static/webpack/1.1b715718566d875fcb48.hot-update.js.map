{"version":3,"file":"static/webpack/1.1b715718566d875fcb48.hot-update.js","sources":["webpack:///./utils/http.js"],"sourcesContent":["import axios from 'axios'\n\nimport * as config from './config'\nimport msg from './msg'\n\n/**\n * @param  {Error}\n * @return {[type]}\n */\nconst catchError = (error) => {\n\tmsg.close()\n\tif(error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    console.log(error.response.data) \n    console.log(error.response.status) \n    console.log(error.response.headers) \n    msg.info('服务器响应错误')\n  } else if(error.request) {\n    // The request was made but no response was received\n    // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n    // http.ClientRequest in node.js\n    console.log(error.request) \n    msg.info('网络请求错误')\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.log('Error', error.message) \n    msg.info('网络请求过程发生错误')\n  }\n  console.log(error.config) \n}\n\n/**\n * 检测用户Token是否有效\n * @param  {Object} data 服务端返回数据\n */\nconst checkInvalidToken = (data) => {\n\tif(data.code ==='E100000' && data.msg === 'Error Token') {\n\t\tconst cookieParam = {expires: -1, path: '/', domain: config.COOKIE_BIGCAT_DOMAIN}\n\t\tcookie.remove(config.COOKIE_BIGCAT_TOKEN, cookieParam)\n\t\tcookie.remove(config.COOKIE_BIGCAT_USER_NAME, cookieParam)\n\t\tcookie.remove(config.COOKIE_BIGCAT_USER, cookieParam)\n\t\tconst currUrl = encodeURIComponent(window.location.href) \n\t\twindow.location.href = '/login.html?c=' + currUrl\n\t\treturn\n\t}\n}\n\nexport default {\n    get(url, data) {\n        return new Promise((resolve, reject) => {\n            axios.get(url, { params: data })\n                .then(result => {\n                    if(result.data) {\n                        if(!result.data.success) {\n                            checkInvalidToken(result.data.data)\n                        }\n\n                        resolve(result.data)\n                    } else {\n                        reject(result.data || result)\n                    }\n                })\n                .catch(error => {\n                    catchError(error)\n                    // reject(error)\n                })\n        })\n    },\n\n    post(url, data) {\n        return new Promise((resolve, reject) => {\n            axios.post(url, qs.stringify(data))\n                .then(result => {\n                    if (result.data) {\n                        if (!result.data.success) {\n                            checkInvalidToken(result.data.data)\n                        }\n\n                        resolve(result.data)\n                    } else {\n                        reject(result.data || result)\n                    }\n                })\n                .catch(error => {\n                    catchError(error)\n                    // reject(error)\n                })\n        })\n    },\n\n    postFormData(url, data, config) {\n        return new Promise((resolve, reject) => {\n            axios.post(url, data, { headers: { 'Content-Type': 'multipart/form-data' }, ...config })\n                .then(result => {\n                    if (result.data) {\n                        if (!result.data.success) {\n                            checkInvalidToken(result.data.data)\n                        }\n\n                        resolve(result.data)\n                    } else {\n                        reject(result.data || result)\n                    }\n                })\n                .catch(error => {\n                    catchError(error)\n                    // reject(error)\n                })\n        })\n    },\n\n    delete(url, data) {\n        return new Promise((resolve, reject) => {\n            axios.delete(url, { params: data })\n                .then(result => {\n                    if (result.data) {\n                        if (!result.data.success) {\n                            checkInvalidToken(result.data.data)\n                        }\n\n                        resolve(result.data)\n                    } else {\n                        reject(result.data || result)\n                    }\n                })\n                .catch(error => {\n                    catchError(error)\n                    // reject(error)\n                })\n        })\n    },\n\n    put(url, data) {\n        return new Promise((resolve, reject) => {\n            axios.put(url, qs.stringify(data))\n                .then(result => {\n                    if (result.data) {\n                        if (!result.data.success) {\n                            checkInvalidToken(result.data.data)\n                        }\n\n                        resolve(result.data)\n                    } else {\n                        reject(result.data || result)\n                    }\n                })\n                .catch(error => {\n                    catchError(error)\n                    // reject(error)\n                })\n        })\n    },\n\n    ajax(option) {\n        return new Promise((resolve, reject) => {\n            axios(option)\n                .then(result => {\n                    if (result.data) {\n                        if (!result.data.success) {\n                            checkInvalidToken(result.data.data)\n                        }\n\n                        resolve(result.data)\n                    } else {\n                        reject(result.data || result)\n                    }\n                })\n                .catch(error => {\n                    catchError(error)\n                    // reject(error)\n                })\n        })\n    },\n\n    all(...args) {\n        return new Promise((resolve, reject) => {\n            axios.all([...args])\n                .then(axios.spread((...params) => {\n                    resolve(params)\n                }))\n                .catch(error => {\n                    catchError(error)\n                    // reject(error)\n                })\n        })\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;;;;;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AA1IA;;;;A","sourceRoot":""}